name: LIMS-CI-Container

on:
  pull_request:
    branches:
      - development
      - main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create and populate .env file
      run: cd LIMS_IMAGE; touch .env; echo 'DB_USER=root' >> .env; echo 'DB_PASSWORD=Lab_rats2021'>> .env; echo 'POSTGRES_DB=lims_db' >> .env; echo 'POSTGRES_HOST=lims_db_server'>> .env; echo 'POSTGRES_USER=root'>> .env; echo 'POSTGRES_PASSWORD=Lab_rats2021'>> .env; echo -n 'SECRET_KEY=' >> .env

    - name: Build postgres container
      run: docker-compose -f LIMS_IMAGE/docker-compose.yml up -d --build db-postgres
    
    - name: Build web container
      run: docker-compose -f LIMS_IMAGE/docker-compose.yml up -d --build web

    - name: generate secret key and save to .env
      run: cd LIMS_IMAGE; python -c "import secrets; f = open('.env', 'a'); f.write(secrets.token_urlsafe()); f.close()"

    - name: Stop web server container
      run: docker stop lims_web_server

    - name: Restart web container
      run: docker-compose -f LIMS_IMAGE/docker-compose.yml up -d --build web

    - name: Running tests
      run: docker exec lims_web_server python manage.py test tests/
